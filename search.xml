<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[关于PT的一点体验与心得]]></title>
    <url>%2F2019%2F12%2F02%2FPT%E7%9A%84%E4%B8%80%E7%82%B9%E4%BD%93%E9%AA%8C%E4%B8%8E%E5%BF%83%E5%BE%97%2F</url>
    <content type="text"><![CDATA[一、PT是什么根据WiKi的解释PT：（Private Tracker）是一种改良自BitTorrent协议的P2P下载方式，“Private Tracker”指私有种子服务器。与BT最大的不同点分别为可进行私密范围下载，并且记录每一个用户的详细数据。 其中提到的BT最典型的例子就是常用的迅雷，]]></content>
  </entry>
  <entry>
    <title><![CDATA[Windows软链接]]></title>
    <url>%2F2019%2F10%2F26%2Findows%E8%BD%AF%E9%93%BE%E6%8E%A5%2F</url>
    <content type="text"><![CDATA[Mklink是windows系统下创建符号链接和硬链接的命令工具，它是一个很好的解决文件系统问题的工具。还在用着四盘位NAS，硬盘实在有限，学生党没这么多闲钱去经常加硬盘空间也是各种东拼西凑 1.使用原因 NAS不在身边，为了远程访问文件选择使用了文件管理工具File browser这个工具也会在下一篇文章中介绍。File browser默认访问目录只有一个，NAS目前一共有；两个机械硬盘和一个iSCSI映射过来的3T盘，File browser只能访问其中一个不想多开后台程序，因此打算将其他两个盘通过软链接的方式映射到同一个盘中。 2.使用方法在windows中启动CMD输入mklink就能看到具体的使用方法:例子12345678创建一个软连接 G:\Geth 连接到目录 H:\tools 上去：mklink /j G:\Geth H:\tools创建一个软连接 G:\Geth 连接到目录 H:\tools 上去：mklink /d G:\Geth H:\tools创建一个硬连接 G:\Geth 连接到目录 H:\tools 上去：mklink /h G:\Geth H:\tools 3.区别1、/D(目录符号链接)和/J(目录联接)的区别: /J在创建时会自动指向原目录的绝对路径，而/D链接允许相对路径的引用。例如：指向命令 mklink /D dird testdir 和 mklink /J dirj testdir 之后。将链接dird 、dirj 移动到其它目录下，则访问 dird 时会提示“位置不可用”，访问 dirj 时仍然正常指向 testdir ； 2、硬链接(/h)和符号链接(/D、/J)的区别： 和符号链接一样，硬链接中所做的任何修改，都会自动应用到目标文件上。但是硬链接具有以下一些不同的地方。硬链接必须引用同一个分区或者卷中的文件（也就是同一个盘中），而符号链接可以指向不同分区或者共享文件夹上的文件或者文件夹。硬链接只能引用文件，而符号链接可以引用文件或者文件夹。Windows会自动维护硬链接，即使把硬链接复制到其他文件夹，硬链接和目标都可以继续访问。删除目标文件，硬链接可以继续保留。只有把目标文件和所有的硬链接都删除，才能把该文件彻底删除。如果win7把软链接的目标文件删除，然后用一个同名文件替换，则符号链接会指向新的目标文件；而把硬链接的目标文件删除’再用同名文件替换，则硬链接还是会继续引用原始文件。对硬链接进行NTFS权限的修改，会同时影响到目标文件(因为两者等价)，而符号链接和目标文件可以设置不同的NTFS权限。也就是说，硬链接和目标文件的地位相等。事实上，原始的目标文件本身也相当于硬链接，新建硬链接，只是相当于增加一个目录路後而已。硬链接看上去和真的文件一模一样(实际上就是真实的文件)，不像符号链接那样有一个快捷方式的小箭头，但是硬链接并不会增加磁盘空间的占用。]]></content>
  </entry>
  <entry>
    <title><![CDATA[进阶十四、超频稳定性测试]]></title>
    <url>%2F2019%2F10%2F10%2F%E5%8D%81%E5%9B%9B%E3%80%81%E8%B6%85%E9%A2%91%E7%A8%B3%E5%AE%9A%E6%80%A7%E6%B5%8B%E8%AF%95%2F</url>
    <content type="text"><![CDATA[测试超频稳定性 大多数超频问题立马就会出现启动问题, 但还是会随时间而出现文件系统问题. 这是一个对系统,特别是SD卡进行压力测试的脚本. 如果脚本执行完成, dmesg中不提示任何错误, 你做的超频设置可能会比较稳定.如果系统崩溃了, 在重启时按住shift键, 这会临时性关闭所有超频. 同样, 注意SD卡问题通常由core_freq造成,不要在raspi-config预设的高速(950 MHz)和超速(1 GHz)里来个大跳越(从250 MHz飞到500 MHz).123456789101112131415161718#!/bin/bash#Simple stress test for system. If it survives this, it&apos;s probably stable.#Free software, GPL2+echo &quot;Testing overclock stability...&quot;#Max out the CPU in the background (one core). Heats it up, loads the power-supply.nice yes &gt;/dev/null &amp;#Read the entire SD card 10x. Tests RAM and I/Ofor i in `seq 1 10`; do echo reading: $i; sudo dd if=/dev/mmcblk0 of=/dev/null bs=4M; done#Writes 512 MB test file, 10x.for i in `seq 1 10`; do echo writing: $i; dd if=/dev/zero of=deleteme.dat bs=1M count=512; sync; done#Clean upkillall yesrm deleteme.dat#Print summary. Anything nasty will appear in dmesg.echo -n &quot;CPU freq: &quot; ; cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_cur_freqecho -n &quot;CPU temp: &quot; ; cat /sys/class/thermal/thermal_zone0/tempdmesg | tailecho &quot;Not crashed yet, probably stable.&quot;]]></content>
  </entry>
  <entry>
    <title><![CDATA[进阶十四、监测温度及电压]]></title>
    <url>%2F2019%2F10%2F10%2F%E5%8D%81%E5%9B%9B%E3%80%81%E7%9B%91%E6%B5%8B%E6%B8%A9%E5%BA%A6%E5%8F%8A%E7%94%B5%E5%8E%8B%2F</url>
    <content type="text"><![CDATA[检测树莓派温度 要检测树莓派的温度, 看: /sys/class/thermal/thermal_zone0/temp要检测树莓派当前的频率, 看: /sys/devices/system/cpu/cpu0/cpufreq/scaling_cur_freq要检测树莓派电源装置的电压, 你需要一个万用电表, 接上电源测试点, 或者扩展头.通常来说要保持核心温度低于70度, 电压高于4.8V. (另外请注意, 不要用那种便宜的USB电源, 那基本上是4.2V的, 这是因为那本来就是为充3.7V锂电池设计的, 根本无法为树莓派提供稳定的5V电压). 此外, 用散热片也是个好主意, 尤其是你把树莓派装到了壳子里. 一个合适的散热器是自带不干胶栅格状的 14x14x10 mm 散热片.]]></content>
  </entry>
  <entry>
    <title><![CDATA[进阶十三、已测试过的超频设置]]></title>
    <url>%2F2019%2F10%2F01%2F%E5%8D%81%E4%B8%89%E3%80%81%E5%B7%B2%E6%B5%8B%E8%AF%95%E8%BF%87%E7%9A%84%E8%B6%85%E9%A2%91%E8%AE%BE%E7%BD%AE%2F</url>
    <content type="text"><![CDATA[下表显示了一些成功的超频尝试, 这些可以指导你进行超频. 这些设置不一定能在每台树莓派上都成功, 并且会缩短高通芯片的寿命.1234567arm_freq=900sdram_freq=450gpu_freq=325core_freq=325h264_freq=325isp_freq=325v3d_freq=325 gpu_freq means core_freq+h264_freq+isp_freq+v3d_freq. So:123arm_freq=900sdram_freq=450gpu_freq=325 这是一个表明Hynix产的RAM在超频上表现不如三星产的RAM的报告.超频时SD卡使用设置SD卡: http://elinux.org/RPi_Easy_SD_Card_Setup超频时使用6速或10速的SD卡(SHDC/SHDX)会导致在一些天后树莓派读取SD卡文件系统不稳定.不管是ext4 , NTFS 或其他格式都一样.不管是哪家SD卡生产商都一样.不管是哪个版本的树莓派都一样.这与SD卡容量无关 – 实际验证出现在16G或更大的SD卡上.! 关键是你何时让树莓派功率不足,也就是低于树莓派的基本设置需求 !popcornmix发表在https://github.com/raspberrypi/linux/issues/280“超频会导致SD卡错误.这情况往往是与板子相关(就是说有些树莓派超频后SD卡没事,有些不行).我认为通常都是core_freq导致的SD卡问题(和arm_freq,sdram_freq比)” 在2013年4月写这个提示的时候在树莓派官方论坛上一共有137个有关于SD的问题, 绝大部分与超频有关.如果你使用6速或10速SD卡, 还想要树莓派稳定运行: 不要尝试超频,否则很可能会丢失数据]]></content>
  </entry>
  <entry>
    <title><![CDATA[进阶十二、时序关系]]></title>
    <url>%2F2019%2F09%2F29%2F%E5%8D%81%E4%BA%8C%E3%80%81%E6%97%B6%E5%BA%8F%E5%85%B3%E7%B3%BB%2F</url>
    <content type="text"><![CDATA[时序控制很重要 GPU核心, h264, v3d和isp共享一个锁相环, 因此需要相关联的频率. ARM, SDRAM和GPU有各自独有的锁相环, 因此可以设为没有关联的频率.当设了void_pwm_pll=1下列设置就没必要了.12pll_freq = floor(2400 / (2 * core_freq)) * (2 * core_freq)gpu_freq = pll_freq / [偶数] 有效的gpu_freq会自动四舍五到到最接近的整型偶数, 所以请求core_freq为500, gpu_freq为300,算一下2000/300 = 6.666 =&gt; 6 ,结果就是333.33MHz.]]></content>
  </entry>
  <entry>
    <title><![CDATA[进阶十一、超频选项]]></title>
    <url>%2F2019%2F09%2F29%2F%E5%8D%81%E4%B8%80%E3%80%81%E8%B6%85%E9%A2%91%E9%80%89%E9%A1%B9%2F</url>
    <content type="text"><![CDATA[超频参数说明 123456789101112131415161718192021222324252627参数 说明arm_freq ARM频率,以MHz为单位. 默认为700gpu_freq 同时设置core_freq, h264_freq, isp_freq, v3d_freq. 默认为250core_freq GPU处理器核心频率,以MHz为单位. 由于GPU要驱动二级缓存, 对ARM性能会造成影响. 默认为 250h264_freq 视频硬解模块频率,以MHz为单位. 默认为250isp_freq 图像传感器管道模块频率,以MHz为单位. 默认为250v3d_freq 3D模块频率,以MHz为单位. 默认为250avoid_pwm_pll 不要把锁相环用在PWM音频. 这会略微降低模拟音频的效果. 空闲的锁相环允许从剩余GPU独立设置core_freq, 这将会比超频有更多权限. 默认为0sdram_freq SDRAM频率,以MHz为单位.默认为400over_voltage ARM/GPU核心电压调节. [-16,8]用0.025V步进等同于[0.8V,1.4V]. 默认为0 (1.2V). 只有在指定 force_turbo或current_limit_override时 (会设置保修位), 才允许数值在6以上over_voltage_sdram 同时设置over_voltage_sdram_c, over_voltage_sdram_i, over_voltage_sdram_pover_voltage_sdram_c SDRAM控制器电压调节. [-16,8]用0.025V步进等同于[0.8V,1.4V]. 默认为0 (1.2V)over_voltage_sdram_i SDRAM I/O电压调节. [-16,8]用0.025V步进等同于[0.8V,1.4V]. 默认为0 (1.2V)over_voltage_sdram_p SDRAM phy电压调节. [-16,8]用0.025V步进等同于[0.8V,1.4V]. 默认为0 (1.2V)force_turbo 关闭动态CPU频率驱动及下面的最小设置. 开启h264/v3d/isp超频. 默认为0. 会设置保修位.initial_turbo 在启动时以指定秒数 (上限为60) 或者以CPU频率来开启急速模式. 如果已经超频, 能对SD卡错误问题有改善. 默认为0arm_freq_min 设置动态时序的最小arm_freq. 默认为700core_freq_min 设置动态时序的最小core_freq. 默认为250sdram_freq_min 设置动态时序的最小sdram_freq. 默认为400over_voltage_min 设置动态时序的最小over_voltage. 默认为0temp_limit 过热保护. 当芯片达到指定温度就把时序和电源切换会默认值. 把此值设高于默认值将影响保修. 默认为85current_limit_override 当设为”0x5A000020″时, 禁止SMPS限流保护. 在超频过高无法重启时设置此项会有所帮助. 会设置保修位.force_turbo模式force_turbo=0开启对ARM核心,GPU核心和SDRAM的动态时序及电压. 在忙的时候ARM频率会提高到”arm_freq”并在闲的时候降低到”arm_freq_min”. “core_freq”, “sdram_freq”和”over_voltage”的行为都一样. “over_voltage”最高为6 (1.35V). h264/v3d/isp部分的非默认值将被忽略.force_turbo=1关闭动态时序, 因此所有频率和电压会保持高值. h264/v3d/isp GPU部分的超频也会开启, 等同于设置”over_voltage”为8 (1.4V).]]></content>
  </entry>
  <entry>
    <title><![CDATA[进阶十、超频]]></title>
    <url>%2F2019%2F09%2F29%2F%E5%8D%81%E3%80%81%E8%B6%85%E9%A2%91%2F</url>
    <content type="text"><![CDATA[作死超频 注意: 设置任何参数来超频树莓派都会在芯片中永久的储存一个保修位, 用于检测你的树莓派是否超频过. 如果设备超频过保修就无效了. 自2012年9月19号,你可以自由超频而不影响保修了.最新的内核有一个默认开启”ondemand”调速器的cpu频率内核驱动. 未开启超频并不会有任何影响. 一旦你开超频, ARM频率将随处理器负载而变化. 只有在调速器需要时才会使用非默认值. 你可以使用*_min配置选项来调整最低值, 或者使用force_turbo=1来禁用动态超频.当芯片温度达到85°C运行时会关闭超频及超压, 直到冷却. 即使在25°C环境温度下使用最高设置, 也不要让温度达到极限.]]></content>
  </entry>
  <entry>
    <title><![CDATA[进阶九、启动]]></title>
    <url>%2F2019%2F09%2F29%2F%E4%B9%9D%E3%80%81%E5%90%AF%E5%8A%A8%2F</url>
    <content type="text"><![CDATA[启动项控制 disable_commandline_tags 在启动内核前, 通过改写ATAGS (0x100处的内存)来阻止start.elfcmdline (string) 命令行参数. 可用来代替cmdline.txt文件kernel (string) 加载指定名称的内核镜像文件启动内核. 默认为”kernel.img”kernel_address 加载kernel.img文件地址kernel_old (bool) 为1时, 从0x0处加载内核ramfsfile (string) 要的加载的ramfs文件ramfsaddr 要加载的ramfs文件地址initramfs (string address) 要加载的ramfs文件及其地址 (就是把ramfsfile+ramfsaddr合并为一项).注意: 这项使用与其他项不同的语法 – 不要在这用”=”号.12正确示例:initramfs initramf.gz 0x00800000 device_tree_address 加载device_tree的地址init_uart_baud 初始化uart波特率. 默认为115200init_uart_clock 初始化uart时序. 默认为3000000 (3Mhz)init_emmc_clock 初始化emmc时序. 默认为100000000 (100MHz)boot_delay 在加载内核前在start.elf等待指定秒. 总延迟=1000 * boot_delay + boot_delay_ms. 默认为1boot_delay_ms在加载内核前在start.elf等待指定毫秒. 默认为0avoid_safe_mode 如果设为1, 将不以安全模式启动. 默认为0]]></content>
  </entry>
  <entry>
    <title><![CDATA[进阶八、许可的解码器]]></title>
    <url>%2F2019%2F09%2F29%2F%E5%85%AB%E3%80%81%E8%AE%B8%E5%8F%AF%E7%9A%84%E8%A7%A3%E7%A0%81%E5%99%A8%2F</url>
    <content type="text"><![CDATA[你可以购买绑定树莓派CPU序列号的证书来使用额外的硬件解码器.decode_MPG2 可开启MPEG-2硬解的序列号.decode_MPG2=0x12345678decode_WVC1 可开启VC-1硬解的序列号.decode_WVC1=0x12345678可在多台树莓派间共享SD卡的序列号. 同时最多8个证书.decode_XXXX=0x12345678,0xabcdabcd,0x87654321,...]]></content>
  </entry>
  <entry>
    <title><![CDATA[进阶七、显示器有效值]]></title>
    <url>%2F2019%2F09%2F29%2F%E9%98%B6%E4%B8%83%E3%80%81%E6%98%BE%E7%A4%BA%E5%99%A8%E6%9C%89%E6%95%88%E5%80%BC%2F</url>
    <content type="text"><![CDATA[哪些值对我的显示器有效?你的HDMI显示器可能只支持一部分设置. 想要找出支持哪些设置, 可以使用下面的方法.把输出格式设为VGA 60Hz (hdmi_group=1 hdmi_mode=1) 然后启动树莓派输入下列命令可以获取CEA支持模式的列表/opt/vc/bin/tvservice -m CEA输入下列命令可以获取DMT支持模式的列表/opt/vc/bin/tvservice -m DMT输入下列命令可以获取当前设置状态/opt/vc/bin/tvservice -s输入下列命令可以从显示器获取更多详细信息/opt/vc/bin/tvservice -d edid.dat /opt/vc/bin/edidparser edid.dat使用默认HDMI模式去排除问题时, edid.dat文件同样会提供信息]]></content>
  </entry>
  <entry>
    <title><![CDATA[进阶六、视频输出]]></title>
    <url>%2F2019%2F09%2F28%2F%E5%85%AD%E3%80%81%E8%A7%86%E9%A2%91%E8%BE%93%E5%87%BA%2F</url>
    <content type="text"><![CDATA[视频输出的众多控制值及其规范 视频模式选项sdtv_mode为复合信号输出设置视频制式(默认为0)1234sdtv_mode=0 NTSCsdtv_mode=1 日本版NTSC – 无基座sdtv_mode=2 PALsdtv_mode=3 巴西版PAL – 副载波为525/60而不是625/50 sdtv_aspect为复合信号输出设置宽高比(默认为1)123sdtv_aspect=1 4:3sdtv_aspect=2 14:9sdtv_aspect=3 16:9 sdtv_disable_colourburst禁止复合信号输出彩色副载波群. 图片会显示为单色, 但是可能会更清晰sdtv_disable_colourburst=1 禁止输出彩色副载波群hdmi_safe使用”安全模式”的设置去尝试用HDMI最大兼容性启动. 这和下面的组合是一个意思:hdmi_force_hotplug=1, config_hdmi_boost=4, hdmi_group=2, hdmi_mode=4, disable_overscan=0 compared to hdmi_safe=1hdmi_ignore_edid如果你的显示器是天朝产的垃圾货, 允许系统忽略EDID显示数据hdmi_ignore_edid=0xa5000080hdmi_edid_file当设为1时, 将会从edid.dat文件中读取EDID数据，而不是从显示器.hdmi_edid_file=1hdmi_force_edid_audio伪装成支持所有音频格式播放, 即便报告不支持也允许通过DTS/AC3.hdmi_force_edid_audio=1hdmi_force_edid_3d伪装成全部CEA模式都支持3D, 即便EDID并不支持.hdmi_force_edid_3d=1avoid_edid_fuzzy_match禁止去模糊匹配EDID中描述的模式. 即便遮蔽错误, 也选用匹配分辨率和最接近帧率的标准模式.avoid_edid_fuzzy_match=1hdmi_ignore_cec_init不发送初始化激活源消息. 避免在重启时使(启用CEC)TV结束待机并切换频道.hdmi_ignore_cec_init=1hdmi_ignore_cec伪装成TV不支持CEC. 将不会支持任何CEC功能.hdmi_ignore_cec=1hdmi_force_hotplug伪装成HDMI热插拔信号被检测到, 出现HDMI显示器被接入hdmi_force_hotplug=1 即便没有检测到HDMI显示器也要使用HDMI模式hdmi_ignore_hotplug伪装成HDMI热插拔信号没有被检测到, 出现HDMI显示器未接入hdmi_ignore_hotplug=1 即便检测到HDMI显示器也要使用混合模式hdmi_pixel_encoding强制像素编码模式. 默认情况下会使用EDID请求的模式, 所以不需要修改.12345678910111213hdmi_pixel_encoding=0 default (limited for CEA, full for DMT)hdmi_pixel_encoding=1 RGB limited (16-235)hdmi_pixel_encoding=2 RGB full ( 0-255)hdmi_pixel_encoding=3 YCbCr limited (16-235)hdmi_pixel_encoding=4 YCbCr limited ( 0-255)hdmi_drive 选择HDMI还是DVI模式hdmi_drive=1 DVI模式 (没声音)hdmi_drive=2 HDMI模式 (如果支持并已启用将有声音输出)hdmi_group 设置HDMI类型不指定组, 或者设为0, 将会使用EDID报告的首选组.hdmi_group=1 CEAhdmi_group=2 DMThdmi_mode 设置在CEA或DMT格式下的屏幕分辨率 CEA当hdmi_group=1 (CEA)时,下列值有效1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859hdmi_mode=1 VGAhdmi_mode=2 480p 60Hzhdmi_mode=3 480p 60Hz Hhdmi_mode=4 720p 60Hzhdmi_mode=5 1080i 60Hzhdmi_mode=6 480i 60Hzhdmi_mode=7 480i 60Hz Hhdmi_mode=8 240p 60Hzhdmi_mode=9 240p 60Hz Hhdmi_mode=10 480i 60Hz 4xhdmi_mode=11 480i 60Hz 4x Hhdmi_mode=12 240p 60Hz 4xhdmi_mode=13 240p 60Hz 4x Hhdmi_mode=14 480p 60Hz 2xhdmi_mode=15 480p 60Hz 2x Hhdmi_mode=16 1080p 60Hzhdmi_mode=17 576p 50Hzhdmi_mode=18 576p 50Hz Hhdmi_mode=19 720p 50Hzhdmi_mode=20 1080i 50Hzhdmi_mode=21 576i 50Hzhdmi_mode=22 576i 50Hz Hhdmi_mode=23 288p 50Hzhdmi_mode=24 288p 50Hz Hhdmi_mode=25 576i 50Hz 4xhdmi_mode=26 576i 50Hz 4x Hhdmi_mode=27 288p 50Hz 4xhdmi_mode=28 288p 50Hz 4x Hhdmi_mode=29 576p 50Hz 2xhdmi_mode=30 576p 50Hz 2x Hhdmi_mode=31 1080p 50Hzhdmi_mode=32 1080p 24Hzhdmi_mode=33 1080p 25Hzhdmi_mode=34 1080p 30Hzhdmi_mode=35 480p 60Hz 4xhdmi_mode=36 480p 60Hz 4xHhdmi_mode=37 576p 50Hz 4xhdmi_mode=38 576p 50Hz 4x Hhdmi_mode=39 1080i 50Hz reduced blankinghdmi_mode=40 1080i 100Hzhdmi_mode=41 720p 100Hzhdmi_mode=42 576p 100Hzhdmi_mode=43 576p 100Hz Hhdmi_mode=44 576i 100Hzhdmi_mode=45 576i 100Hz Hhdmi_mode=46 1080i 120Hzhdmi_mode=47 720p 120Hzhdmi_mode=48 480p 120Hzhdmi_mode=49 480p 120Hz Hhdmi_mode=50 480i 120Hzhdmi_mode=51 480i 120Hz Hhdmi_mode=52 576p 200Hzhdmi_mode=53 576p 200Hz Hhdmi_mode=54 576i 200Hzhdmi_mode=55 576i 200Hz Hhdmi_mode=56 480p 240Hzhdmi_mode=57 480p 240Hz Hhdmi_mode=58 480i 240Hzhdmi_mode=59 480i 240Hz H H表示16:9比例(正常是4:3).2x表示双倍像素(即更高的像素时脉, 每个像素重复两次)4x表示四倍像素(即更高的像素时脉, 每个像素重复四次) DMT当hdmi_group=2 (DMT)时,下列值有效警告: 像素时脉是有限制的, 最高支持的模式是1920x1200 @60Hz with reduced blanking.1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586hdmi_mode=1 640x350 85Hzhdmi_mode=2 640x400 85Hzhdmi_mode=3 720x400 85Hzhdmi_mode=4 640x480 60Hzhdmi_mode=5 640x480 72Hzhdmi_mode=6 640x480 75Hzhdmi_mode=7 640x480 85Hzhdmi_mode=8 800x600 56Hzhdmi_mode=9 800x600 60Hzhdmi_mode=10 800x600 72Hzhdmi_mode=11 800x600 75Hzhdmi_mode=12 800x600 85Hzhdmi_mode=13 800x600 120Hzhdmi_mode=14 848x480 60Hzhdmi_mode=15 1024x768 43Hz DO NOT USEhdmi_mode=16 1024x768 60Hzhdmi_mode=17 1024x768 70Hzhdmi_mode=18 1024x768 75Hzhdmi_mode=19 1024x768 85Hzhdmi_mode=20 1024x768 120Hzhdmi_mode=21 1152x864 75Hzhdmi_mode=22 1280x768 reduced blankinghdmi_mode=23 1280x768 60Hzhdmi_mode=24 1280x768 75Hzhdmi_mode=25 1280x768 85Hzhdmi_mode=26 1280x768 120Hz reduced blankinghdmi_mode=27 1280x800 reduced blankinghdmi_mode=28 1280x800 60Hzhdmi_mode=29 1280x800 75Hzhdmi_mode=30 1280x800 85Hzhdmi_mode=31 1280x800 120Hz reduced blankinghdmi_mode=32 1280x960 60Hzhdmi_mode=33 1280x960 85Hzhdmi_mode=34 1280x960 120Hz reduced blankinghdmi_mode=35 1280x1024 60Hzhdmi_mode=36 1280x1024 75Hzhdmi_mode=37 1280x1024 85Hzhdmi_mode=38 1280x1024 120Hz reduced blankinghdmi_mode=39 1360x768 60Hzhdmi_mode=40 1360x768 120Hz reduced blankinghdmi_mode=41 1400x1050 reduced blankinghdmi_mode=42 1400x1050 60Hzhdmi_mode=43 1400x1050 75Hzhdmi_mode=44 1400x1050 85Hzhdmi_mode=45 1400x1050 120Hz reduced blankinghdmi_mode=46 1440x900 reduced blankinghdmi_mode=47 1440x900 60Hzhdmi_mode=48 1440x900 75Hzhdmi_mode=49 1440x900 85Hzhdmi_mode=50 1440x900 120Hz reduced blankinghdmi_mode=51 1600x1200 60Hzhdmi_mode=52 1600x1200 65Hzhdmi_mode=53 1600x1200 70Hzhdmi_mode=54 1600x1200 75Hzhdmi_mode=55 1600x1200 85Hzhdmi_mode=56 1600x1200 120Hz reduced blankinghdmi_mode=57 1680x1050 reduced blankinghdmi_mode=58 1680x1050 60Hzhdmi_mode=59 1680x1050 75Hzhdmi_mode=60 1680x1050 85Hzhdmi_mode=61 1680x1050 120Hz reduced blankinghdmi_mode=62 1792x1344 60Hzhdmi_mode=63 1792x1344 75Hzhdmi_mode=64 1792x1344 120Hz reduced blankinghdmi_mode=65 1856x1392 60Hzhdmi_mode=66 1856x1392 75Hzhdmi_mode=67 1856x1392 120Hz reduced blankinghdmi_mode=68 1920x1200 reduced blankinghdmi_mode=69 1920x1200 60Hzhdmi_mode=70 1920x1200 75Hzhdmi_mode=71 1920x1200 85Hzhdmi_mode=72 1920x1200 120Hz reduced blankinghdmi_mode=73 1920x1440 60Hzhdmi_mode=74 1920x1440 75Hzhdmi_mode=75 1920x1440 120Hz reduced blankinghdmi_mode=76 2560x1600 reduced blankinghdmi_mode=77 2560x1600 60Hzhdmi_mode=78 2560x1600 75Hzhdmi_mode=79 2560x1600 85Hzhdmi_mode=80 2560x1600 120Hz reduced blankinghdmi_mode=81 1366x768 60Hzhdmi_mode=82 1080p 60Hzhdmi_mode=83 1600x900 reduced blankinghdmi_mode=84 2048x1152 reduced blankinghdmi_mode=85 720p 60Hzhdmi_mode=86 1366x768 reduced blanking 其他参数1234567891011121314151617181920overscan_left 左侧跳过像素数overscan_right 右侧跳过像素数overscan_top 顶部跳过像素数overscan_bottom 底部跳过像素数framebuffer_width 控制台framebuffer宽度, 以像素为单位. 默认是显示器宽度减去超出扫描.framebuffer_height 控制台framebuffer高度, 以像素为单位. 默认是显示器高度减去超出扫描.framebuffer_depth 控制台framebuffer深度, 以位为单位. 默认是16位. 8位也是有效的, 但是默认RGB调色板会导致屏幕不可读. 24位效果更好 ,但是2012年6月15号发现有显示混乱问题. 32位没有混乱问题, 但是需要设置framebuffer_ignore_alpha=1, 并在2012年6月15号发现颜色显示错误.framebuffer_ignore_alpha 设为1将禁用alpha通道. 仅对32位有效.test_mode 允许在启动时做声音与图像测试.disable_overscan 设为1将禁用超出扫描.config_hdmi_boost 设置HDMI接口的信号强度. 默认为0. 如果出现HDMI干扰问题可以试试设为4. 最大为7.display_rotate 顺时针旋转屏幕显示 (默认为0) 或者翻转显示.display_rotate=0 正常display_rotate=1 90度display_rotate=2 180度display_rotate=3 270度display_rotate=0x10000 水平翻转display_rotate=0x20000 垂直翻转注意: 旋转90度或者270度额外需要GPU内存, 所以在GPU只分配到16M的时候旋转会无效. 可能的原因:Crashes my RPI before Linux boots if set to “1” — REW 20120913.]]></content>
  </entry>
  <entry>
    <title><![CDATA[进阶五、CMA动态内存分配]]></title>
    <url>%2F2019%2F09%2F28%2F%E4%BA%94%E3%80%81CMA%E5%8A%A8%E6%80%81%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D%2F</url>
    <content type="text"><![CDATA[自2012年11月19号, 固件和内核开始支持CMA, 这意味运行时可以动态管理ARM和GPU之间的内存分配. 这儿有相关config.txt示例.cma_lwm 当GPU可用内存低于cma_lwm所设值, 将会向ARM请求一些内存.cma_hwm 当GPU可用内存高于cma_hwm所设值, 将会向ARM释放一些内存.要启用CMA，下面的参数需要添加到cmdline.txt文件里:coherent_pool=6M smsc95xx.turbo_mode=N]]></content>
  </entry>
  <entry>
    <title><![CDATA[进阶四、内存]]></title>
    <url>%2F2019%2F09%2F28%2F%E5%9B%9B%E3%80%81%E5%86%85%E5%AD%98%2F</url>
    <content type="text"><![CDATA[内存控制的某些控制值disable_l2cache 禁止ARM访问GPU的二级缓存. 相应的需要在内核中关闭二级缓存. 默认为0gpu_mem GPU内存以兆为单位. 设置ARM和GPU之间的内存分配. ARM会获得剩余所有内存. 最小设为16. 默认为64gpu_mem_256 对于有256MB内存的树莓派的GPU内存设置. 512MB的派请忽略。会覆盖gpu_mem。最大设为192，默认不设置gpu_mem_512 对于有512MB内存的树莓派的GPU内存设置. 256MB的派请忽略. 会覆盖gpu_mem. 最大设为448. 默认不设置disable_pvt 禁止每500毫秒调整一次RAM的刷新率 (RAM温度测量)。]]></content>
  </entry>
  <entry>
    <title><![CDATA[进阶三、文件格式]]></title>
    <url>%2F2019%2F09%2F28%2F%E4%B8%89%E3%80%81%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F%2F</url>
    <content type="text"><![CDATA[当值是整形时格式为”属性=值”. 每行只指定一个参数. 注释使用’#’井号作为一行开头.注意: 在新版的树莓派里每行都有#注释, 要想使用该行参数只需移除#.下面是示例文件123456789101112# Set stdv mode to PAL (as used in Europe) sdtv_mode=2# Force the monitor to HDMI mode so that sound will be sent over HDMI cablehdmi_drive=2# Set monitor mode to DMThdmi_group=2# Set monitor resolution to 1024x768 XGA 60Hz (HDMI_DMT_XGA_60)hdmi_mode=16# Make display smaller to stop text spilling off the screenoverscan_left=20overscan_right=12overscan_top=10overscan_bottom=10 这是另一个示例文件, 包含了各种功能的扩展文档.]]></content>
  </entry>
  <entry>
    <title><![CDATA[进阶二、config.txt]]></title>
    <url>%2F2019%2F09%2F28%2F%E4%BA%8C%E3%80%81config-txt%2F</url>
    <content type="text"><![CDATA[由于树莓派并没有传统意义上的BIOS, 所以现在各种系统配置参数通常被存在”config.txt”这个文本文件中。 树莓派的config.txt文件会在ARM内核初始化之前被GPU读取。这个文件存在引导分区上的.对于Linux, 路径通常是/boot/config.txt, 如果是Windows (或者OS X) 它会被识别为SD卡中可访问部分的一个普通文件。如果想要编辑配置文件, 请查看介绍编辑树莓派配置文件。你可以使用下列命令去获取当前激活的设置:1234567- 列出指定的配置参数.- 例如: vcgencmd get_config arm_freqvcgencmd get_config - 列出所有已设置的整形配置参数(非零)vcgencmd get_config int- 列出所有已设置的字符型配置参数(非零)vcgencmd get_config str]]></content>
  </entry>
  <entry>
    <title><![CDATA[进阶一、GPIO介绍]]></title>
    <url>%2F2019%2F09%2F28%2F%E9%98%B6%E4%B8%80%E3%80%81GPIO%E4%BB%8B%E7%BB%8D%2F</url>
    <content type="text"><![CDATA[General Purpose Input Output （通用输入/输出）简称为GPIO，或总线扩展器，人们利用工业标准I2C、SMBus或SPI接口简化了I/O口的扩展。当微控制器或芯片组没有足够的I/O端口，或当系统需要采用远端串行通信或控制时，GPIO产品能够提供额外的控制和监视功能。 第一次使用GPIO口用的是网上找的方法：写一个C语言文件，运行一下以控制IO口的输出和输入，树莓派的GPIO口一共有40个 在寄存器操作方面完全相同，GPxCON 中每两位控制一根引脚， 00 输入 01 输出 10 特殊功能 11 保留不用]]></content>
  </entry>
  <entry>
    <title><![CDATA[树莓派3代进阶玩法]]></title>
    <url>%2F2019%2F09%2F28%2F%E6%B4%BE3%E4%BB%A3%E8%BF%9B%E9%98%B6%E7%8E%A9%E6%B3%95%2F</url>
    <content type="text"><![CDATA[基础玩法讲地差不多了，该开始有些进阶玩法（作死玩法）开更，填坑]]></content>
  </entry>
  <entry>
    <title><![CDATA[十三、超时闲置断开]]></title>
    <url>%2F2019%2F09%2F28%2F%E4%B8%89%E3%80%81%E8%B6%85%E6%97%B6%E9%97%B2%E7%BD%AE%E6%96%AD%E5%BC%80%2F</url>
    <content type="text"><![CDATA[用SSH过程连接电脑时，经常遇到长时间不操作而被服务器踢出的情况，常见的提示如：Write failed: Broken pipe这是因为如果有一段时间在SSH连接上无数据传输，连接就会断开。解决此问题有两种方法。 在客户端设置方法很简单，只需在客户端电脑上编辑（需要root权限）/etc/ssh/ssh_config，并添加如下一行：ServerAliveInterval 60此后该系统里的用户连接SSH时，每60秒会发一个KeepAlive请求，避免被踢。 在服务器端设置如果有相应的权限，也可以在服务器端设置，即编辑/etc/ssh/sshd_config，并添加：ClientAliveInterval 60重启SSH服务器后该项设置会生效。/etc/init.d/sshd restart每一个连接到此服务器上的客户端都会受其影响。]]></content>
  </entry>
  <entry>
    <title><![CDATA[十二、VIM编辑器]]></title>
    <url>%2F2019%2F09%2F28%2F%E3%80%81VIM%E7%BC%96%E8%BE%91%E5%99%A8%2F</url>
    <content type="text"><![CDATA[vi(vim)是上Linux非常常用的编辑器，很多Linux发行版都默认安装了vi(vim)。vi(vim)命令繁多但是如果使用灵活之后将会大大提高效率。vi是“visual interface”的缩写，vim是vi IMproved(增强版的vi)。在一般的系统管理维护中vi就够用，如果想使用代码加亮的话可以使用vim。下面整理一下vi的使用教程：包含vi的基本介绍、使用模式、文件的打开关闭保存、插入文本或新建行、移动光标、删除、恢复字符或行、搜索等等，算是一篇比较适合新手学习vi的教程。vi有3个模式：插入模式、命令模式、低行模式。123插入模式：在此模式下可以输入字符，按ESC将回到命令模式。 命令模式：可以移动光标、删除字符等。 低行模式：可以保存文件、退出vi、设置vi、查找等功能(低行模式也可以看作是命令模式里的)。 打开文件、保存、关闭文件(vi命令模式下使用) 123456vi filename //打开filename文件:w //保存文件:w vpser.net //保存至vpser.net文件:q //退出编辑器，如果文件已修改请使用下面的命令:q! //退出编辑器，且不保存:wq //退出编辑器，且保存文件 插入文本或行(vi命令模式下使用，执行下面命令后将进入插入模式，按ESC键可退出插入模式) 12345678a //在当前光标位置的右边添加文本i //在当前光标位置的左边添加文本A //在当前行的末尾位置添加文本I //在当前行的开始处添加文本(非空字符的行首)O //在当前行的上面新建一行o //在当前行的下面新建一行R //替换(覆盖)当前光标位置及后面的若干文本J //合并光标所在行及下一行为一行(依然在命令模式) 移动光标(vi命令模式下使用)123使用上下左右方向键命令模式下：h 向左、j 向下 、k 向上、l 向右。空格键 向右、Backspace 向左、Enter 移动到下一行首、- 移动到上一行首。 删除、恢复字符或行(vi命令模式下使用)123456x //删除当前字符nx //删除从光标开始的n个字符dd //删除当前行ndd //向下删除当前行在内的n行u //撤销上一步操作U //撤销对当前行的所有操作 搜索(vi命令模式下使用)1234/vpser //向光标下搜索vpser字符串?vpser //向光标上搜索vpser字符串n //向下搜索前一个搜素动作N //向上搜索前一个搜索动作 跳至指定行(vi命令模式下使用)1234n+ //向下跳n行n- //向上跳n行nG //跳到行号为n的行G //跳至文件的底部 设置行号(vi命令模式下使用)12:set nu //显示行号:set nonu //取消显示行号 复制、粘贴(vi命令模式下使用)12345678yy //将当前行复制到缓存区，也可以用 &quot;ayy 复制，&quot;a 为缓冲区，a也可以替换为a到z的任意字母，可以完成多个复制任务。nyy //将当前行向下n行复制到缓冲区，也可以用 &quot;anyy 复制，&quot;a 为缓冲区，a也可以替换为a到z的任意字母，可以完成多个复制任务。yw //复制从光标开始到词尾的字符。nyw //复制从光标开始的n个单词。y^ //复制从光标到行首的内容。 VPS侦探y$ //复制从光标到行尾的内容。p //粘贴剪切板里的内容在光标后，如果使用了前面的自定义缓冲区，建议使用&quot;ap 进行粘贴。P //粘贴剪切板里的内容在光标前，如果使用了前面的自定义缓冲区，建议使用&quot;aP 进行粘贴。 替换(vi命令模式下使用)1234:s/old/new //用new替换行中首次出现的old:s/old/new/g //用new替换行中所有的old:n,m s/old/new/g //用new替换从n到m行里所有的old:%s/old/new/g //用new替换当前文件里所有的old 编辑其他文件:e otherfilename //编辑文件名为otherfilename的文件。 修改文件格式:set fileformat=unix //将文件修改为unix格式，如win下面的文本文件在linux下会出现^M。 总结：vi(vim)教程虽然有比较多的命令，但是只要勤加练习，相信你会很快的熟练掌握，同时也会给你的工作或学习带来更高的效率。当如果不知道自己处在什么模式时可以按2次Esc键即可回到命令模式，会有最后提醒一点：注意大小写！！！]]></content>
  </entry>
  <entry>
    <title><![CDATA[十一、命令行当做Web]]></title>
    <url>%2F2019%2F09%2F28%2F%E3%80%81%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%BD%93%E5%81%9AWeb%2F</url>
    <content type="text"><![CDATA[稍微有点鸡肋的功能…就当玩玩好了（桌面下还是火狐好用） w3mw3m是一个基于文本的万维网(World Wide Web, WWW)客户端。它有英文和日文版本的帮助文件并且有一个选项用来切换这两种语言。它只能显示HTML的table和frame。w3m当前版本可以运行在Unix上(Solaris，SunOS，HP-UX，Linux，FreeBSD和EWS4800)。通过下面的命令进行安装：sudo apt-get install w3m使用下面的命令来访问网站，把其中的http://www.google.com换成你想要的地址：w3m http://www.google.com使用CTRL + Z退出w3m。 LynxLynx是一个通用的浏览器。使用下面的命令安装它：sudo apt-get install lynx使用下面的命令来访问网站，把其中的http://www.google.com换成你想要的地址：lynx http://www.google.com使用CTRL + Z退出。 LINKSLinks是一个带有ncurse界面(ncurse是一个虚拟终端中的“类GUI”应用软件工具箱，译注)的文本模式WWW浏览器，支持彩色，正确的table渲染，后台下载，菜单驱动的配置界面和瘦长的字符。支持Frame框架。你可以通过外部的访问器来进行不同文件格式的浏览。支持通过外部客户端使用mailto:和telnet:进行浏览。通过下面的命令来安装它：sudo apt-get install links通过下面的命令来访问网站，把http://www.google.com换成你想要的地址:links http://www.google.com使用CTRL + Z退出。]]></content>
  </entry>
  <entry>
    <title><![CDATA[十、LED指示灯状态]]></title>
    <url>%2F2019%2F09%2F28%2FLED%E6%8C%87%E7%A4%BA%E7%81%AF%E7%8A%B6%E6%80%81%2F</url>
    <content type="text"><![CDATA[LED亮灯状态 123456LED 颜色 功能 正常状态ACT 绿色 card status 闪烁:SD卡正在活动（类似电脑的硬盘灯）PWR 红色 power 不闪烁:正常FDX 橙 full duplex 亮:全双工/不亮:半双工LNK 橙 link 亮:网络连接成功100 橙 100 Mbps 亮:100 Mbps/不亮:10 Mbps 常见亮灯状态1234567891011ACT PWR FDX LNK 100 状态解读 解读/原因○●○ ●●● ○○○ ○○○ ○○○ 正常 ACT灯:SD卡正在活动○○○ ●●● ○○○ ○○○ ○○○ 不正常 SD卡启动文件损坏或没有SD卡○○○ ○●○ ○○○ ○○○ ○○○ 不正常 电源电压不正常●○● ●●● ○○○ ○○○ ○○○ 不正常 看下文解释○●○ ●●● ●●● ●●● ●●● 正常 全双工/100 Mbps○●○ ●●● ●●● ●●● ○○○ 正常 全双工/10 Mbps○●○ ●●● ○○○ ●●● ●●● 正常 半双工/100 Mbps○●○ ●●● ○○○ ●●● ○○○ 正常 半双工/10 Mbps○●○:闪烁 ●●●:常亮 ○○○:不亮 ●○●:有规律闪烁●○●:ACT灯有规律闪烁的解读 2012年10月以后的固件：123• 3闪烁：start.elf未找到• 4闪烁：start.elf没有启动• 7闪烁：kernel.img未找到 2012年10月以前的旧固件：12345• 3闪烁：loader.bin未找到• 4闪烁：loader.bin没有启动• 5闪烁：start.elf未找到• 6闪烁：start.elf没有推出• 7闪烁：kernel.img未找到]]></content>
  </entry>
  <entry>
    <title><![CDATA[九、截屏]]></title>
    <url>%2F2019%2F09%2F28%2F%E6%88%AA%E5%B1%8F%2F</url>
    <content type="text"><![CDATA[在树莓派上截屏的方法很简单。首先在终端中用下面的命令安装名叫“scrot”的截屏工具。123456789sudo apt-get install scrot截取全屏幕执行：sudo scrot用鼠标选区屏幕区域截取执行：sudo scrot -s20秒后截取，参数可以自定义：sudo scrot -d20执行下面的指令可以查看更多用法：sudo scrot -h]]></content>
  </entry>
  <entry>
    <title><![CDATA[八、安装和卸载]]></title>
    <url>%2F2019%2F09%2F28%2F%E5%AE%89%E8%A3%85%E5%92%8C%E5%8D%B8%E8%BD%BD%2F</url>
    <content type="text"><![CDATA[基础命令 12345678910111213141516安装软件 apt-get install softname1 softname2 softname3卸载软件 apt-get remove softname1 softname2 softname3卸载并清除配置 apt-get remove –purge softname1更新软件信息数据库 apt-get update进行系统升级 apt-get upgrade搜索软件包 apt-cache search softname1 softname2 softname3如果使用apt-get遇到速度慢或者源不存在等错误，可能需要更换源安装deb软件包 dpkg -i xxx.deb删除软件包 dpkg -r xxx.deb连同配置文件一起删除 dpkg -r –purge xxx.deb查看软件包信息 dpkg -info xxx.deb查看文件拷贝详情 dpkg -L xxx.deb查看系统中已安装软件包信息 dpkg -l重新配置软件包 dpkg-reconfigure xxx清除所有已删除包的残馀配置文件dpkg -l |grep ^rc|awk &apos;&#123;print $2&#125;&apos; |sudo xargs dpkg -P 如果报如下错误，证明你的系统中没有残留配置文件了，无须担心。dpkg–purge needs at least one package name argumentdpkg安裝的可以用apt卸載，反之亦可。 aptitude 命令aptitude 与 apt-get 一样，是 Debian 及其衍生系统中功能极其强大的包管理工具。与 apt-get 不同的是，aptitude 在处理依赖问题上更佳一些。举例来说，aptitude 在删除一个包时，会同时删除本身所依赖的包。这样，系统中不会残留无用的包，整个系统更为干净。以下是笔者总结的一些常用 aptitude 命令，仅供参考。12345678910aptitude update 更新可用的包列表aptitude upgrade 升级可用的包aptitude dist-upgrade 将系统升级到新的发行版aptitude install pkgname 安装包aptitude remove pkgname 删除包aptitude purge pkgname 删除包及其配置文件aptitude search string 搜索包aptitude show pkgname 显示包的详细信息aptitude clean 删除下载的包文件aptitude autoclean 仅删除过期的包文件 当然，你也可以在文本界面模式中使用 aptitude。 常用apt命令列表123456789101112131415161718apt-cache search # ------(package 搜索包) apt-cache show #------(package 获取包的相关信息，如说明、大小、版本等) sudo apt-get install # ------(package 安装包) sudo apt-get install # -----(package - - reinstall 重新安装包) sudo apt-get -f install # -----(强制安装?#&quot;-f = --fix-missing&quot;当是修复安装吧...) sudo apt-get remove #-----(package 删除包) sudo apt-get remove - - purge # ------(package 删除包，包括删除配置文件等) sudo apt-get autoremove --purge # ----(package 删除包及其依赖的软件包+配置文件等（只对6.10有效，强烈推荐）) sudo apt-get update #------更新源 sudo apt-get upgrade #------更新已安装的包 sudo apt-get dist-upgrade # ---------升级系统 sudo apt-get dselect-upgrade #------使用 dselect 升级 apt-cache depends #-------(package 了解使用依赖) apt-cache rdepends # ------(package 了解某个具体的依赖?#当是查看该包被哪些包依赖吧...) sudo apt-get build-dep # ------(package 安装相关的编译环境) apt-get source #------(package 下载该包的源代码) sudo apt-get clean &amp;&amp; sudo apt-get autoclean # --------清理下载文件的存档 &amp;&amp; 只清理过时的包 sudo apt-get check #-------检查是否有损坏的依赖]]></content>
  </entry>
  <entry>
    <title><![CDATA[七、输入法安装]]></title>
    <url>%2F2019%2F09%2F21%2F%E3%80%81%E8%BE%93%E5%85%A5%E6%B3%95%E5%AE%89%E8%A3%85%2F</url>
    <content type="text"><![CDATA[装个拼音凑合用着。。sudo apt-get install fcitx fcitx-googlepinyin fcitx-module-cloudpinyin fcitx-sunpinyin]]></content>
  </entry>
  <entry>
    <title><![CDATA[六、日期时间修正]]></title>
    <url>%2F2019%2F09%2F21%2F%E6%97%A5%E6%9C%9F%E6%97%B6%E9%97%B4%E4%BF%AE%E6%AD%A3%2F</url>
    <content type="text"><![CDATA[在树莓派上，打date命令可以看到系统的日期时间：(后面的CST表示中国标准时间)树莓派没有电池，断电后无法保存时间。树莓派默认安装了NTP(Network Time Protocol)服务来获取互联网上ntp服务器提供的时间。如果这个时间不准，可以用这个命令校准一下。sudo ntpd -s -d如果还是不准，就用这个命令强制设置sudo date --s=&quot;2014-08-31 14:42:00&quot;最后，添加一些国内可用的ntp服务器，如果你的时间正常，可以不做这些设置。打开ntp服务的配置文件sudo nano /etc/ntp.conf找到这两行12# You do need to talk to an NTP server or two (or three).# server ntp.your-provider.example 在下面添加以下内容，是一些亲测可用的ntp服务器。第一行最后的perfer表示优先使用此服务器，也就是复旦大学的ntp服务器。添加之后按Ctrl+X保存退出。12345server ntp.fudan.edu.cn iburst perfer server time.asia.apple.com iburst server asia.pool.ntp.org iburst server ntp.nict.jp iburst server time.nist.gov iburst 重启ntp服务sudo /etc/init.d/ntp restart]]></content>
  </entry>
  <entry>
    <title><![CDATA[五、显示中文]]></title>
    <url>%2F2019%2F09%2F21%2F%E4%BA%94%E3%80%81%E6%98%BE%E7%A4%BA%E4%B8%AD%E6%96%87%2F</url>
    <content type="text"><![CDATA[救救英语不好的孩子吧。。。ssh中输入以下命令：sudo apt-get install ttf-wqy-zenhei安装过程中如果碰到(Y/n)，都选择y中文字库安装完成之后，还需要安装一个中文输入法。输入如下命令sudo apt-get install scim-pinyin一样的安装过程，安装完毕后输入sudo raspi-config按空格键选中zh_CN.UTF-8,然后回车选中文看见如下命令重启即可然后选择change_locale，在Default locale for the system environment中选择zh_CN.UTF-8,配置完成之后，输入命令sudo reboot重启完成好就可以在VNC连接上去后使用中文显示和中文输入法了，切换中文输入法一样也是ctrl+space。]]></content>
  </entry>
  <entry>
    <title><![CDATA[四、蓝牙连接]]></title>
    <url>%2F2019%2F09%2F21%2F%E5%9B%9B%E3%80%81%E8%93%9D%E7%89%99%E8%BF%9E%E6%8E%A5%2F</url>
    <content type="text"><![CDATA[树莓派偶尔连接一下自己做的蓝牙音箱听听歌，静静心~~ 升级安装蓝牙相关软件包 sudo apt-get updatesudo apt-get upgrade -ysudo apt-get dist-upgrade -ysudo apt-get install pi-bluetooth bluez bluez-firmware blueman 添加pi用户到蓝牙组sudo usermod -G bluetooth -a pi 重启 sudo reboot]]></content>
  </entry>
  <entry>
    <title><![CDATA[三、无线连接（命令行界面下）]]></title>
    <url>%2F2019%2F04%2F16%2F%E4%B8%89%E3%80%81%E6%97%A0%E7%BA%BF%E8%BF%9E%E6%8E%A5%EF%BC%88%E5%91%BD%E4%BB%A4%E8%A1%8C%E7%95%8C%E9%9D%A2%E4%B8%8B%EF%BC%89%2F</url>
    <content type="text"><![CDATA[树莓派方便在带无线网卡，直接连接无线调试起来方便很多 一、查看网卡状态是否正常把无线网卡插到树莓派上，输入命令ifconfig -a查看是否有wlan0的信息，如果有说明网卡状态正常，可以跳过第二步，直接配置无线网络。如果查不到wlan0的信息，则需要安装无线网卡的驱动。 二、查看无线网卡的信息输入命令dmesg | grep usb查看无线网卡的信息，主要是看制造厂家（Manufacturer）。比如，我的网卡信息是usb 1-1.3: Manufacturer: Realtek以Realtek为例，安装无线网卡驱动。如果现在你的树莓派能联网，输入安装命令就可以安装Realtek的驱动了。首先搜索Realtek驱动：apt-cache search realtek看到下面信息：firmware-realtek – Binary firmware for Realtek wired and wireless network adapters安装Realtek驱动：sudo apt-get install firmware-realtek如果你的树莓派现在不能上网，那么你可以去镜像站点中下载相关驱动。我推荐阿里云的镜像站点，速度比较快。http://mirrors.aliyun.com/raspbian/raspbian/pool/non-free/f/firmware-nonfree下载firmware-realtek_0.43_all.deb，用winscp上传到树莓派的/tmp目录中。输入命令安装：sudo dpkg -i /tmp/firmware-realtek_0.43_all.deb 三、配置无线网络用编辑器nano打开interfaces文件 sudo nano /etc/network/interfaces我的interfaces文件是这样的： auto lo iface lo inet loopback iface eth0 inet dhcp allow-hotplug wlan0 iface wlan0 inet manual wpa-roam /etc/wpa_supplicant/wpa_supplicant.conf iface default inet dhcp我们把无线网卡部分全部用#注释掉，然后添加自己的配置信息最终结果如下： auto lo iface lo inet loopback iface eth0 inet dhcp auto wlan0 #allow-hotplug wlan0 #iface wlan0 inet manual iface wlan0 inet dhcp wpa-conf /etc/wpa.conf #wpa-roam /etc/wpa_supplicant/wpa_supplicant.conf iface default inet dhcp 使用nano编辑器，ctrl+o保存，ctrl+x退出。用编辑器nano创建 /etc/wpa.conf 文件： sudo nano /etc/wpa.conf如果你的wifi没有密码 network={ [Tab] ssid=”你的无线网络名称（ssid）” [Tab] key_mgmt=NONE }如果你的wifi使用WEP加密 network={ [Tab] ssid=”你的无线网络名称（ssid）” [Tab] key_mgmt=NONE [Tab] wep_key0=”你的wifi密码” }如果你的wifi使用WPA/WPA2加密 network={ [Tab] ssid=”你的无线网络名称（ssid）” [Tab] key_mgmt=WPA-PSK [Tab] psk=”你的wifi密码” }注1：所有符号都是半角符号（英文状态下的符号），“[Tab]”表示按一次Tab键注2：如果你不清楚wifi的加密模式，可以在安卓手机上用root explorer打开 /data/misc/wifi/wpa/wpa_supplicant.conf，查看wifi的信息。比如，我的wpa.conf文件是这样的： network={ ssid=”1234” key_mgmt=WPA-PSK psk=”MTIzNA1234” }最后输入命令启用无线网卡： sudo ifup wlan0可以连无线网了。]]></content>
      <categories>
        <category>技术分享</category>
      </categories>
      <tags>
        <tag>树莓派玩法</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[二、树莓派屏幕休眠]]></title>
    <url>%2F2019%2F04%2F15%2F%E6%A0%91%E8%8E%93%E6%B4%BE%E5%B1%8F%E5%B9%95%E4%BC%91%E7%9C%A0%2F</url>
    <content type="text"><![CDATA[树莓派大部分使用其终端，屏幕用来配置即可，不使用时休眠一、禁止屏幕在图形界面下休眠在 /etc/profile.d 路径下新建一个文件，如Screen.sh，并将下面两条命令写入该文件，即可以实现永久禁用。1 xsetdpms 0 0 02 xsets off操作： cd /etc/profile.d sudo nano Screen.sh接着看到 输入如下内容 Ctrl+X Y保存即可 指令 说明xset s off 禁用屏幕保护xset s 3600 3600 设置空闲时间为1小时xset -dpms 关闭 DPMSxset s off -dpms 禁用 DPMS 并阻止屏幕进入空闲xset dpms force off 立即关闭屏幕xset dpms force standby 强制屏幕进入待命状态xset dpms force suspend 强制屏幕进入暂停状态 二、禁止屏幕在 Console 终端下休眠执行下面的命令就可以解决这个问题。1 setterm -blank 0重启后此命令会失效，所以需要装这个命令加入到启动脚本中，每次开机后自动启动。Raspbian 和 Archlinux 在 /etc/bash.bashrc 文件中加入，CentOS 则是在/etc/bashrc加入:1 setterm -blank 0更多相关设置：1 setterm -blank [0-60|force|poke]2 setterm -powersave [on|vsync|hsync|powerdown|off]3 setterm -powerdown [0-60]以上参数为0时表示禁用。例如下面的指令表示禁止屏幕进入保护和关闭状态1 setterm -blank 0 -powerdown 0]]></content>
      <categories>
        <category>技术分享</category>
      </categories>
      <tags>
        <tag>树莓派玩法</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[一、树莓派系统安装]]></title>
    <url>%2F2019%2F04%2F15%2F%E6%A0%91%E8%8E%93%E6%B4%BE%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85%2F</url>
    <content type="text"><![CDATA[开始安装树莓派系统，常用的为树莓派官方系统，基于Linux，有其他需求的也可以安装Windows lot 第一步是到官网 https://www.raspberrypi.org/downloads/ 下载你需要的树莓派系统，树莓派推荐aspberrypi系统，下载的是一个ISO镜像文件。 使用Win32 Disk Imager把iso镜像写入SD卡，写完了就把内存卡插到树莓派上。 上电开机启动，第一次启动使用，插上HDMI进入界面，默认账号是pi，密码是raspberry。 首先进 raspberry configuration开启ssh和vnc服务，开启后系统会提示重启。 重启一次系统后会有让你修改系统登录默认密码的提示框，打开终端，输入 sudo passwd ,就能按照提示设置密码， 新的密码会输入两遍。 接下来就是开启root权限，raspberry基于linux，输入sudo passwd –unlock root 就能默认解锁root账户，root账户拥有系统的最高权限，所以很有表要开启，输入sudo -i或者su root就能开启root账户，输入su pi就能回到普通账户。 进终端安装ssh和vnc服务，sudo apt-get install openssh-server sudo apt-get install tightvncserver,之后ifconfig看树莓派ip地址，就能内网通过ssh和vnc访问。 Windows、macos和linux都可以安装vncviwer（vnc）或者putty（ssh），输入树莓派ip，连接后输入账户和密码就能连接。]]></content>
      <categories>
        <category>技术分享</category>
      </categories>
      <tags>
        <tag>树莓派玩法</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[零、树莓派配置介绍]]></title>
    <url>%2F2019%2F04%2F15%2F%E6%A0%91%E8%8E%93%E6%B4%BE%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%2F</url>
    <content type="text"><![CDATA[今天开始更新树莓派玩法 The Raspberry Pi 3 is the third-generation Raspberry Pi. It replaced the Raspberry Pi 2 Model B in February 2016. • Quad Core 1.2GHz Broadcom BCM2837 64bit CPU • 1GB RAM • BCM43438 wireless LAN and Bluetooth Low Energy (BLE) on board • 40-pin extended GPIO • 4 USB 2 ports • 4 Pole stereo output and composite video port • Full size HDMI • CSI camera port for connecting a Raspberry Pi camera • DSI display port for connecting a Raspberry Pi touchscreen display • Micro SD port for loading your operating system and storing data • Upgraded switched Micro USB power source up to 2.5A]]></content>
      <categories>
        <category>技术分享</category>
      </categories>
      <tags>
        <tag>树莓派玩法</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[可以牵着你的手嘛]]></title>
    <url>%2F2019%2F04%2F11%2F%E5%8F%AF%E4%BB%A5%E7%89%B5%E7%9D%80%E4%BD%A0%E7%9A%84%E6%89%8B%E5%98%9B%2F</url>
    <content type="text"><![CDATA[牵着小手鬼屋行程后我们去看了一场电影，看的无名之辈，我们也是生活中的无名之辈，靠着缘分偶然遇到一起，我会珍惜的。 看电影中我时不时会看向你，你认真看电影的样子真好看，眼睛里闪动着电影的画面，我坐那突然抓起你的手，十指紧紧扣在一起。晚上我们去了你帮我预订的宾馆，刷卡开门，我看床上有一朵玫瑰花，第一念头是送给你(自己都不敢相信自己会这样做)，可惜啦那是一朵假花，不过没关系，我以后会再送你真的。 东西都放好了后就该送你回去了，( 你还说不要我送你回去，这怎么可能啊我可不放心，这么好看的女朋友指不定谁就打注意呢 ) 我们等啊等一直没等到公交车，我说滴滴吧，你说再等等，然后我就偷偷滴滴了哈哈哈哈，没想到滴滴司机到了的时候连过两辆公交车。 送你到了学校我故意放慢脚步，你也好像明白我的意思，和我一起慢慢走，我那时候真挺紧张，和你慢慢走向寝室，快到了的时候我觉得不能再纠结了，于是直男地问， 我能不能牵着你的手 你轻轻说可以，我拉住了你的手，很柔软但是也很凉。我问，我们以后在一起好吗，你轻轻说，你也会…恩我们都会努力去展现最好的自己。那晚你问我为什么我会选择你，那晚我说，如果不抓住这次机会，我就一定会后悔的。]]></content>
      <categories>
        <category>我和小可爱</category>
      </categories>
      <tags>
        <tag>牵手</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[我们第一次见面]]></title>
    <url>%2F2019%2F04%2F10%2F%E6%88%91%E4%BB%AC%E7%AC%AC%E4%B8%80%E6%AC%A1%E8%A7%81%E9%9D%A2%2F</url>
    <content type="text"><![CDATA[我就能见到你了那天我到达了你的城市，一路上公交车都很顺畅，可能是老天在帮我，帮我早点见到你。 来见你是我一个重要的决定，也是我很果断的一个决定，我感受到对面屏幕前这个女孩会是我这辈子很重要的一个人，我不能就这样宁丢了。 到了你的车站，你说要躲着我让我找找，可是我一下车啊，第一眼就看到一个漂亮的小姐姐站在那踱步，我猜那就是你吧，我笑着走了过去，心中忐忑(好可爱的小姐姐)。我们就这样见面了，那一刻心跳很快，像是故人来，可又带着几分陌生人的感觉，毕竟我们这是真正意义上的第一次相见。 我来不及说出我准备的那些话，只好紧张地和你聊聊天，随便聊一聊日常，现在回想我已经记不起来那天说了什么，只知道当时的我啊，爱上了眼前这个文静的女孩。 你接着就带我去你的学校转了转，看到理工楼中的各种熟悉的证书，我在想，他们一定也很努力，都是值得学习的前辈，不过我也在偷偷观察那个傻瓜，一路上我们说的话不多，我想改变一下氛围，于是开始聊学习，聊生活。 后来你带我去你的食堂吃饭(心中：食堂好好啊)，吃饭时我居然忘了喝汤，你后来还告诉我你也没喝，看我没喝以为我不喜欢，宝贝好可爱啊，那天我吃饭速度很快，估计是因为有点点紧张吧。 下午你带我去了鬼屋，说实话我不怕鬼，可是进去了之后内心还是有点点怕，在那里这是我第一次好好和宝贝直视(我第一眼 好漂亮好可爱的小姐姐啊)，那里面我带着宝贝找线索，和宝贝在一起智商变低，第一关竟然玩了半小时！！！ 你被吓到的时候紧紧抓住我的手，我当时好像握着你的手，可是怕你不接受，毕竟那是我们第一次相见嘛。到了一个停尸间时，只能一个一个人地过，我相信你，决定你把我先推进去看看，但是又担心你一个人在外面害怕，一遍一遍地告诉你我先进去看看然后立刻把你带过来，还好没发生什么意外，这个时候我们之间的距离已经拉近了不少，最后通关时，一个人突然跳出来想吓我们，恩我确实被吓到了，但是第一念头竟然是转过身去保护这个女孩，转过去又不敢紧紧抱住，还是担心你不习惯(现在想想我当时太单纯，太乖了，就应该抱住的)，可是不小心把你踩了一脚，后来发现还挺严重的，当时好心疼啊，可是又做不了什么，想蹲下帮你看看，又怕你不愿意….我真的是个傻子，太老实了哈哈哈哈 鬼屋行程很愉快啊，唯一不足就是把你踩了一脚。]]></content>
      <categories>
        <category>我和小可爱</category>
      </categories>
      <tags>
        <tag>见面</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[我们在一起吧]]></title>
    <url>%2F2019%2F04%2F10%2F%E6%88%91%E4%BB%AC%E5%9C%A8%E4%B8%80%E8%B5%B7%E5%90%A7%2F</url>
    <content type="text"><![CDATA[我说：在一起在一起在一起吧！那是我们认识第几天我已经想不起来了，虽然时间不长但是感觉已经互相很熟悉，时间也过的很漫长。 课堂小插曲 那天你和我分享你课堂上的一个小故事，你哈哈哈哈地笑着，我也觉得好笑，课堂上起哄在一起在一起，说着说着我突然有种想说这句话的冲动。没错，我说了，这一次我没有任何犹豫。你问：主语是谁？嗯主语就是我们，我没有骗你。你还说怕我后悔，小姐姐怎么对自己没有信心啊！ 仓促表白 在那一刻，我突然觉得在QQ上向你表白太草率了，有种想当面表白的冲动我说 说不定哪天就去你那玩了，你把地址也告诉了我。后来我们电话聊了一会电话里头 我也紧张。你也特别紧张哈哈哈哈我说 我不帅 也不高你有点害羞，不怎么说话，但是能听出来声音 是个温柔的小姐姐]]></content>
      <categories>
        <category>我和小可爱</category>
      </categories>
      <tags>
        <tag>相爱</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[来到你的城市]]></title>
    <url>%2F2019%2F04%2F10%2F20181112%2F</url>
    <content type="text"><![CDATA[这一次我有着前所未有的果断有时候幸福就是那一瞬间的机会，抓住了为自己的幸福奋斗，说不定是一生的幸福呢我本来打算上午去你那，玩到晚上高铁回来然后你轻声说:要不你待到第二天吧(心中暗喜) 我们开始做着准备工作你帮我预定好了酒店，我买好了高铁票 你说要带我来一次鬼屋行程（此处笑出声）后来发现你其实很害怕你问了我许多饮食习惯，我不喜欢吃的你都知道了我一度提出想和你一起去自习你说你太爱学习了，周围的人都认为你不可能谈恋爱，我就觉得这次他们猜错了 你还和我讨论很久穿什么哈哈哈哈哈你知道我感冒了后，你说要买个链子牵着保持距离（后来一起玩还真在街上遇到卖同款链子的人了，可惜 我当时买一根就好了） 我们在QQ上说到时候你可能会沉默，我说我不会的你还问我不喜欢哪种女生，我说浓妆艳抹，事实证明你就是我喜欢的那种女生]]></content>
      <categories>
        <category>我和小可爱</category>
      </categories>
      <tags>
        <tag>偶遇</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[我很怂的，别怂]]></title>
    <url>%2F2019%2F04%2F02%2F%E6%88%91%E5%BE%88%E6%80%82%E7%9A%84%EF%BC%8C%E5%88%AB%E6%80%82%2F</url>
    <content type="text"><![CDATA[10.29是一个奇特的日子偶然相识 说来像是一次偶然的相遇，偶然认识了你，紧接着一系列的截图，你在里面说…… 喜欢你说话的风格 后来我加上了你的QQ，说来有点让人发笑，第一句话我说的是 我太怂了我确实挺怂的，平时和女孩子交流也不多，贸然加上了你的QQ好友也怕打扰你，找支书要QQ想&gt;了想又撤回了，没想到还是被看到了消息把你的QQ给了我。 “别怂” 你回应我说:哈哈哈哈哈，别怂。 第一感觉你一定是个爱笑的女孩子，爱笑的女孩子都很美 你告诉我你叫蔡君怡，嗯这个名字真的挺好听的，你还告诉我你学的秃头专业–法学（哈哈哈&gt;），我说我学的电子一样迟早会秃。 共同记忆 距离第一次认识你也过去半个月了，我只记得那天我们聊了很久，从初中出发，没意料到我们&gt;曾经是三年隔壁班的校友，回忆了许多初中时的记忆，你也让我回忆起那最自豪的一次颁奖典&gt;礼，你说你还记得我，我有点意外。我们有着许多共同的记忆，聊到了有关韩国的电影《熔炉》，我发现你和我有着相同的电影爱&gt;好。你第一次表扬我说我真会说话。没错，和你聊天我变的会说话起来，不知道是大学三年磨练还&gt;是某种特殊的感觉。聊天很融洽，我感觉每到尴尬时你总会出来救一下场，这或许也是我们能够聊这么久的原因吧。 插曲 在加你好友时，我并没有多动心，虽然你是好看的小姐姐，但是大学以来已经习惯了单身，想着聊几句别对不起支书的好意，然后慢慢的我们就会疏远然后就没有然后了。后来这是我们第一次互道晚安，嗯晚安。]]></content>
      <categories>
        <category>我和小可爱</category>
      </categories>
      <tags>
        <tag>相识</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo博客搭建流程]]></title>
    <url>%2F2019%2F03%2F12%2F20190312%2F</url>
    <content type="text"><![CDATA[目的一直想搭建一个博客，记录我和可爱女朋友的日常。上学期事情有点多，本地群晖上Wordpress搭建的网站模板稍微有点丑被我放弃了。考虑到内网穿透后成本和直接购买云服务器成本差不多，阿里云刚好买了一个域名，因此选择了阿里云。 主机选择年前购买了阿里云的主机，一直没来得及搭建，最近开学时间多来完成。 我购买的为阿里云轻量应用服务器，和ECS云服务器相比价格差不多，但是在部署博客方面简化了操作，系统选择为Centos7.2（稳定性较高）。 遇坑总结刚开始搭建时，和大部分新手的选择一样，百度–怎样搭建hexo博客，映入眼帘的是各式各样的教程文章，随便点开一个便开始操作，操作到一半各种问题出现，比如nodejs版本问题、hexo文件夹混乱等等。 在经历了一次失败后，我决定从官方文档入手，hexo官方文档写得非常详细，教程中若有不明白之处请移步官方文档，语言尽量选择英文，当然还有中文文档 hexo搭建流程什么是hexo？ Hexo是一个快速、简洁且高效的博客框架。 Hexo使用Markdown解析文章，在几秒内，即可利用靓丽的主题生成静态网页 依赖安装 安装nodejs cURL： curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash 或Wget： wget -qO- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash 安装git Windows: 下载安装git Mac: Install it with Homebrew, MacPorts or installer. Linux (Ubuntu, Debian): apt-get install git-core Linux (Fedora, Red Hat, CentOS): sudo yum install git-core 完成后 install stable 安装hexo npm install -g hexo-cli 安装完成结束教程 进阶设置]]></content>
      <categories>
        <category>技术分享</category>
      </categories>
      <tags>
        <tag>网站搭建</tag>
      </tags>
  </entry>
</search>
